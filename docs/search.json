[
  {
    "objectID": "Analysis.html",
    "href": "Analysis.html",
    "title": "Parallelism analysis",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(Polychrome)\nlibrary(withr)\nlibrary(fs)\nlibrary(compositions)\n\n\nplot_nuc_survival &lt;- function(df, ylim, ybreaks, ncol){\n  ggplot(df, aes(x=m, y=value, color=name, linetype = name)) + \n    geom_step(direction = \"mid\") +\n    scale_x_continuous(limits = c(0.5, 3.5), \n                       breaks = c(1, 2, 3), \n                       minor_breaks = NULL) +\n    scale_y_log10(breaks = {{ ybreaks }},\n                  labels = scales::trans_format(\"log10\", scales::math_format(10^.x))) + \n    labs(x=(\"Nucleotide multiplicitiy, m\"), \n         y=(\"Total mutations â‰¥ m\"),\n         color = NULL) +\n    scale_color_manual(values = c(\"blue\", \"red\")) +\n    scale_linetype(guide = 'none') +\n    facet_wrap(~label, ncol = {{ ncol }}) +\n    annotation_logticks(sides = \"l\", color = \"grey40\") +\n    coord_cartesian(ylim = c(1, {{ ylim }})) +\n    theme_bw() +\n    theme(\n      strip.placement = 'outside',\n      strip.background = element_blank(),\n      panel.grid = element_blank(),\n      legend.position = \"bottom\"\n    )\n}"
  },
  {
    "objectID": "Analysis.html#filtering",
    "href": "Analysis.html#filtering",
    "title": "Parallelism analysis",
    "section": "Filtering",
    "text": "Filtering\n\n\nCode\n# AD and DP\nvariants_all_tidy &lt;- variants_all_tidy %&gt;%\n  filter(ALT_AD &gt;= 5 & DP &gt;= 5)\n\n# MGE\ngenomad &lt;- read_tsv(\"../Amanda_metagenomedata/MGE/genomad_HAMBI_combined.tsv\",\n                    skip = 1,\n                    col_names = c(\"HAMBI\",\n                                  \"CHROM\",\n                                  \"Start\",\n                                  \"End\",\n                                  \"Name\",\n                                  \"prediction_tool\"),\n                    col_types = c(\"ccddcc\"))\n\nmgefinder &lt;- read_tsv(\"../Amanda_metagenomedata/MGE/MGE_finder_HAMBI_combined.tsv\",\n                      skip = 1,\n                      col_names = c(\"HAMBI\",\n                                    \"Name\",\n                                    \"CHROM\",\n                                    \"Start\",\n                                    \"End\",\n                                    \"prediction_tool\"),\n                      col_types = c(\"cccddc\"))\n\n\nvariants_all_tidy_mge &lt;- variants_all_tidy %&gt;% \n  left_join(mgefinder, by = join_by(HAMBI, CHROM), relationship = \"many-to-many\") %&gt;% \n  filter(!(POS &gt;= Start & POS &lt;= End)) %&gt;% \n  dplyr::select(-Name, -Start, -End, -prediction_tool) %&gt;% \n  distinct() %&gt;% \n  left_join(genomad, by = join_by(HAMBI, CHROM), relationship = \"many-to-many\") %&gt;% \n  filter(!(POS &gt;= Start & POS &lt;= End)) %&gt;% \n  dplyr::select(-Name, -Start, -End, -prediction_tool) %&gt;% \n  distinct()\n\n# metadata\nmeta &lt;- read_csv(\"../Amanda_metagenomedata/Experiment_info/key.csv\") %&gt;%\n  mutate(sample = str_remove_all(sample, \"_L003\"))\n\nvariants_all_tidy_final &lt;- left_join(variants_all_tidy_mge, meta,\n                                     by = join_by(Sample == sample)) %&gt;%\n  mutate(Experiment = ifelse(is.na(Experiment),\n                             \"t0\",\n                             Experiment))\n\n# remove tetrahymena\nvariants_strep &lt;- variants_all_tidy_final %&gt;%\n  filter(Experiment != \"Tetrahymena\" & Experiment != \"Both\") %&gt;%\n  filter(History != \"Tetrahymena\" & History != \"Both\")"
  },
  {
    "objectID": "Analysis.html#plot",
    "href": "Analysis.html#plot",
    "title": "Parallelism analysis",
    "section": "Plot",
    "text": "Plot\n\n\nCode\nnuc_survival &lt;- variants_filt %&gt;%\n  filter(VAF &gt; 0.05) %&gt;%\n  dplyr::select(HAMBI, History, Experiment, POS, REF, ALT, Replicate) %&gt;% \n  # multiplicity = number of replicate populations each unique mutation is\n  # observed in\n  summarize(m = n_distinct(Replicate), .by = c(HAMBI, History, Experiment, POS, REF, ALT)) %&gt;%\n  # now calculate the total number of mutations across all replicates so we need\n  # to ungroup by mutation position/alt allele but because we still want to\n  # determine this value by treatment category we keep the treatment category\n  # grouping. However, this should be changed if you want to for example average\n  # over all the treatment conditions on a species basis\n  group_by(HAMBI, History, Experiment) %&gt;%\n  count(m, name = \"m_count\") %&gt;%\n  mutate(n = m * m_count,\n         Ntot = sum(n),\n         perc = n / Ntot * 100) %&gt;%\n  left_join(chrom_lengths, by = join_by(HAMBI)) %&gt;%\n  arrange(cur_group_id(), desc(m)) %&gt;%\n  #  dpois() tells the probability mass at a given number of counts. Here we\n  #  want to get the probability of observing n mutations with multiplicity\n  #  = mi (i.e. the counts of mi in the observed data). We assume that\n  #  mutations independently occur on the genome of size Ltot at a rate of\n  #  lambda = Ntot/Ltot and that generally the events are rare. Thus this\n  #  situation can be modeled by the Poisson distribution. We can get the\n  #  binned number of mutations per level of multiplicity m by multiplying\n  #  the probability by the length of the genome and the binned mutations\n  #  divided by the total number of mutations.\n  mutate(m_count_expected = cumsum((m_count / Ntot) *\n                                     sum_bases *\n                                     dpois(m, lambda = Ntot / sum_bases))) %&gt;%\n  #dplyr::select(-num_contigs) %&gt;%\n  relocate(m, n, Ntot, perc, m_count, m_count_expected) %&gt;%\n  ungroup()\n\n# setup for plotting\nnuc_survival_plot &lt;- nuc_survival %&gt;% \n  group_by(HAMBI, History, Experiment) %&gt;% \n  # when there is only one multiplicity observed for a mutation filter such\n  # that the multiplicty of that mutation must be greater than one.\n  # Otherwise include all remaining mutations (m &gt; 0)\n  filter(case_when(n() == 1 ~ m &gt; 1,\n                   TRUE ~ m &gt; 0)) %&gt;% \n  pivot_longer(cols = c(\"m_count\", \"m_count_expected\")) %&gt;% \n  mutate(label = paste(HAMBI, \"History:\", History, \"\\nexperiment:\", Experiment)) %&gt;% \n  # and make final plot\n  plot_nuc_survival(., 5000, c(1, 10, 100, 1000, 10000), 4)\n\nnuc_survival_plot"
  }
]